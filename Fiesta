git init
git add .
git commit -m "Initial commit"
git remote add origin https://github.com/GABO96-EH/birthday-invite.git
git push -u origin main

import React, { useState, useEffect } from 'react';

const EVENT_DATE = new Date('2025-10-15T18:00:00'); // <-- SET YOUR DATE & TIME HERE
const GOOGLE_FORM_LINK = 'https://forms.gle/YOUR_FORM_ID'; // <-- SET YOUR GOOGLE FORM LINK HERE
const PARTY_LOCATION = '123 Fiesta Ave, City, Country'; // <-- SET YOUR LOCATION HERE
const ITINERARY = [
  { time: '18:00', activity: 'Welcome & Drinks' },
  { time: '19:00', activity: 'Dinner' },
  { time: '20:30', activity: 'Games & Dance' },
  { time: '22:00', activity: 'Cake & Thank You' },
];

export default function Home() {
  // Countdown logic
  const [countdown, setCountdown] = useState({});
  useEffect(() => {
    const interval = setInterval(() => {
      const now = new Date();
      const diff = EVENT_DATE - now;
      setCountdown({
        days: Math.floor(diff / (1000 * 60 * 60 * 24)),
        hours: Math.floor((diff / (1000 * 60 * 60)) % 24),
        minutes: Math.floor((diff / (1000 * 60)) % 60),
        seconds: Math.floor((diff / 1000) % 60),
      });
    }, 1000);
    return () => clearInterval(interval);
  }, []);

  // Music
  const [isPlaying, setIsPlaying] = useState(false);
  const audioRef = React.useRef(null);

  const handlePlay = () => {
    audioRef.current.play();
    setIsPlaying(true);
  };
  const handlePause = () => {
    audioRef.current.pause();
    setIsPlaying(false);
  };

  // Song suggestion
  const [songSuggestion, setSongSuggestion] = useState('');
  const [suggestedSongs, setSuggestedSongs] = useState([]);
  const handleSuggestSong = () => {
    if (songSuggestion.trim()) {
      setSuggestedSongs([...suggestedSongs, songSuggestion]);
      setSongSuggestion('');
    }
  };

  return (
    <div style={{
      fontFamily: 'sans-serif',
      background: '#fffbe8',
      padding: '2rem',
      maxWidth: 600,
      margin: '2rem auto',
      borderRadius: '16px',
      boxShadow: '0 4px 24px rgba(0,0,0,0.08)',
    }}>
      <h1>üéâ You're Invited to My Birthday Party! üéâ</h1>

      {/* Countdown */}
      <section>
        <h2>Countdown to the Party</h2>
        <div style={{ fontSize: '2rem', fontWeight: 'bold' }}>
          {`${countdown.days || 0}d ${countdown.hours || 0}h ${countdown.minutes || 0}m ${countdown.seconds || 0}s`}
        </div>
      </section>

      {/* Music */}
      <section style={{ margin: '1.5rem 0' }}>
        <h2>Party Anthem</h2>
        <audio ref={audioRef} src="/party-song.mp3" preload="auto" />
        {!isPlaying ?
          <button onClick={handlePlay}>Play Song</button>
          :
          <button onClick={handlePause}>Pause Song</button>
        }
      </section>

      {/* Location */}
      <section>
        <h2>üìç Location</h2>
        <p>{PARTY_LOCATION}</p>
        {/* Optional: Embed Google Maps */}
        <iframe
          src={`https://www.google.com/maps?q=${encodeURIComponent(PARTY_LOCATION)}&output=embed`}
          width="100%" height="200" style={{ border: 0, borderRadius: '8px' }} allowFullScreen loading="lazy"
        />
      </section>

      {/* Message for guests */}
      <section>
        <h2>Message to My Guests</h2>
        <p>
          I'm so happy to celebrate this special day with you! Come join us for an unforgettable evening of fun, laughter, and good vibes.
        </p>
      </section>

      {/* Thank you */}
      <section>
        <h2>Thank You</h2>
        <p>
          Thank you for being part of my life and for sharing this moment with me. Your presence means the world!
        </p>
      </section>

      {/* Itinerary */}
      <section>
        <h2>Event Itinerary</h2>
        <ul>
          {ITINERARY.map(item => (
            <li key={item.time}><strong>{item.time}</strong>: {item.activity}</li>
          ))}
        </ul>
      </section>

      {/* Song suggestion */}
      <section>
        <h2>Suggest a Song for the Playlist!</h2>
        <input
          type="text"
          value={songSuggestion}
          onChange={e => setSongSuggestion(e.target.value)}
          placeholder="Song Name or YouTube Link"
        />
        <button onClick={handleSuggestSong} style={{ marginLeft: '8px' }}>Suggest</button>
        {suggestedSongs.length > 0 && (
          <ul>
            {suggestedSongs.map((song, idx) => <li key={idx}>{song}</li>)}
          </ul>
        )}
      </section>

      {/* RSVP Button */}
      <section style={{ marginTop: '2rem', textAlign: 'center' }}>
        <a
          href={GOOGLE_FORM_LINK}
          target="_blank"
          rel="noopener noreferrer"
        >
          <button style={{
            background: '#ff6f61',
            color: 'white',
            padding: '1rem 2rem',
            fontSize: '1.2rem',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            boxShadow: '0 2px 8px rgba(0,0,0,0.08)'
          }}>
            RSVP Here
          </button>
        </a>
      </section>
    </div>
  );
}

